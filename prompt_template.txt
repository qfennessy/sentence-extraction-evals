You will extract structured information about family members and relationships from a sentence. Focus only on family-related information, not all biographical details.

Here is the sentence:
{SENTENCE}

Extract all family relationships mentioned in the sentence, and output a JSON object with the following structure:
{
  "family_members": [
    {
      "name": "person's name (use actual name if provided, a descriptive placeholder if unnamed)",
      "age": "age if mentioned, otherwise null",
      "gender": "female/male if known or can be inferred, otherwise null",
      "occupation": "occupation if mentioned, otherwise null",
      "relation_to": [
        {
          "name": "related person's name or descriptor (e.g., 'narrator', 'speaker' for first-person references)",
          "relationship": "how they are related (e.g., 'son', 'daughter', 'brother', 'sister', 'mother', etc.)"
        }
      ]
    }
  ]
}

IMPORTANT GUIDELINES:

1. Names and Identifiers:
   - For first-person narrators, always use "narrator" as the name
   - For unnamed family members, use clear descriptive identifiers (e.g., "father", "mother", "grandmother")
   - When multiple unnamed children are mentioned (e.g., "seven children"), name them "child1", "child2", etc.

2. Relationship Chains and Family Structure:
   - When extracting from first-person perspective ("my father"), create entries for all parties
   - For multi-step relationships ("my wife's parents"), create entries for all people in the chain
   - Always include reciprocal relationships (if A is parent to B, B is child to A)
   - For married couples, ensure both husband-wife relationships are captured

3. Special Relationship Types:
   - Use "twin" specifically for twins (also include "brother"/"sister" relationships to siblings)
   - Use "half-brother"/"half-sister" for half-siblings
   - Use "stepfather"/"stepmother" for step-relationships
   - Use "-in-law" suffix for in-law relationships (mother-in-law, brother-in-law, etc.)
   - For nieces/nephews, use "niece"/"nephew" when gender is known, "niece/nephew" when not
   - For aunts/uncles, use "aunt"/"uncle" when gender is known, "aunt/uncle" when not
   
4. Age and Gender:
   - Only include age when it's explicitly mentioned (e.g., "8 years old", "was 6")
   - Infer gender from relationships and pronouns when possible
   - Use gender-appropriate relationship terms (brother/sister, husband/wife)
   - Use gender-neutral terms (child, sibling, spouse) when gender is unknown

5. Edge Cases:
   - For "when they were X years old", only include as age if it's their current age
   - Only create entries for family members who are explicitly mentioned
   - Don't create entries for hypothetical/future family members

Example 1 (Simple relationship):
For the sentence "My sister Sarah graduated from Harvard and now practices medicine in Boston", the output would be:
{
  "family_members": [
    {
      "name": "Sarah",
      "age": null,
      "gender": "female",
      "occupation": "doctor",
      "relation_to": [
        {
          "name": "narrator",
          "relationship": "sister"
        }
      ]
    },
    {
      "name": "narrator",
      "age": null,
      "gender": null,
      "occupation": null,
      "relation_to": [
        {
          "name": "Sarah",
          "relationship": "sibling"
        }
      ]
    }
  ]
}

Example 2 (Extended family):
For the sentence "My grandfather on my mother's side, Joseph, worked as a coal miner and raised five children with my grandmother Eleanor", the output would be:
{
  "family_members": [
    {
      "name": "Joseph",
      "age": null,
      "gender": "male",
      "occupation": "coal miner",
      "relation_to": [
        {
          "name": "narrator",
          "relationship": "grandfather"
        },
        {
          "name": "mother",
          "relationship": "father"
        },
        {
          "name": "Eleanor",
          "relationship": "husband"
        }
      ]
    },
    {
      "name": "Eleanor",
      "age": null,
      "gender": "female",
      "occupation": null,
      "relation_to": [
        {
          "name": "narrator",
          "relationship": "grandmother"
        },
        {
          "name": "Joseph",
          "relationship": "wife"
        }
      ]
    },
    {
      "name": "mother",
      "age": null,
      "gender": "female",
      "occupation": null,
      "relation_to": [
        {
          "name": "narrator",
          "relationship": "mother"
        },
        {
          "name": "Joseph",
          "relationship": "daughter"
        }
      ]
    },
    {
      "name": "narrator",
      "age": null,
      "gender": null,
      "occupation": null,
      "relation_to": [
        {
          "name": "Joseph",
          "relationship": "grandchild"
        },
        {
          "name": "Eleanor",
          "relationship": "grandchild" 
        },
        {
          "name": "mother",
          "relationship": "child"
        }
      ]
    },
    {
      "name": "child1",
      "age": null,
      "gender": null,
      "occupation": null,
      "relation_to": [
        {
          "name": "Joseph",
          "relationship": "child"
        },
        {
          "name": "Eleanor",
          "relationship": "child"
        }
      ]
    },
    {
      "name": "child2",
      "age": null,
      "gender": null, 
      "occupation": null,
      "relation_to": [
        {
          "name": "Joseph",
          "relationship": "child"
        },
        {
          "name": "Eleanor",
          "relationship": "child"
        }
      ]
    },
    {
      "name": "child3",
      "age": null,
      "gender": null,
      "occupation": null,
      "relation_to": [
        {
          "name": "Joseph",
          "relationship": "child"
        },
        {
          "name": "Eleanor",
          "relationship": "child"
        }
      ]
    },
    {
      "name": "child4",
      "age": null,
      "gender": null,
      "occupation": null,
      "relation_to": [
        {
          "name": "Joseph",
          "relationship": "child"
        },
        {
          "name": "Eleanor",
          "relationship": "child"
        }
      ]
    },
    {
      "name": "child5",
      "age": null,
      "gender": null,
      "occupation": null,
      "relation_to": [
        {
          "name": "Joseph",
          "relationship": "child"
        },
        {
          "name": "Eleanor",
          "relationship": "child"
        }
      ]
    }
  ]
}

Only return the JSON object, with no other text.